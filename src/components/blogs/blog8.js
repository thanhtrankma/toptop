import React from 'react';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';

const AsynchronousProgramming = () => {
  return (
    <section>
      <h1>Asynchronous Programming trong JavaScript</h1>
      <p>
        Hi·ªÉu c√°ch l√†m vi·ªác v·ªõi <strong>Promises</strong> v√† <strong>async/await</strong>.
      </p>

      <h2>1. Promises</h2>
      <p>Promises gi√∫p x·ª≠ l√Ω c√°c t√°c v·ª• b·∫•t ƒë·ªìng b·ªô, tr√°nh callback hell.</p>
      <SyntaxHighlighter language="javascript" style={darcula} wrapLines showInlineLineNumbers>
        {`const fetchData = () => {
  return new Promise((resolve) => {
    setTimeout(() => resolve("D·ªØ li·ªáu ƒë√£ t·∫£i"), 2000);
  });
};

fetchData().then((data) => console.log(data)); // Output: D·ªØ li·ªáu ƒë√£ t·∫£i (sau 2s)`}
      </SyntaxHighlighter>

      <h2>2. Async/Await</h2>
      <p>Async/Await gi√∫p vi·∫øt m√£ b·∫•t ƒë·ªìng b·ªô d·ªÖ ƒë·ªçc h∆°n.</p>
      <SyntaxHighlighter language="javascript" style={darcula} wrapLines showInlineLineNumbers>
        {`const getData = async () => {
  const data = await fetchData();
  console.log(data);
};

getData(); // Output: D·ªØ li·ªáu ƒë√£ t·∫£i (sau 2s)`}
      </SyntaxHighlighter>

      <h2>3. Fetch API v·ªõi Async/Await</h2>
      <p>V√≠ d·ª• v·ªÅ vi·ªác l·∫•y d·ªØ li·ªáu t·ª´ API s·ª≠ d·ª•ng async/await.</p>
      <SyntaxHighlighter language="javascript" style={darcula} wrapLines showInlineLineNumbers>
        {`const fetchUserData = async () => {
  try {
    const response = await fetch("https://jsonplaceholder.typicode.com/users/1");
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.error("L·ªói khi l·∫•y d·ªØ li·ªáu:", error);
  }
};

fetchUserData();`}
      </SyntaxHighlighter>

      <h2>üìå T·ªïng k·∫øt</h2>
      <ul>
        <li>
          <strong>Promises</strong>: Gi√∫p x·ª≠ l√Ω b·∫•t ƒë·ªìng b·ªô m·ªôt c√°ch hi·ªáu qu·∫£.
        </li>
        <li>
          <strong>Async/Await</strong>: Gi√∫p code d·ªÖ ƒë·ªçc h∆°n khi l√†m vi·ªác v·ªõi t√°c v·ª• b·∫•t ƒë·ªìng b·ªô.
        </li>
        <li>
          <strong>Fetch API</strong>: K·∫øt h·ª£p v·ªõi async/await ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ server.
        </li>
      </ul>
    </section>
  );
};

export default AsynchronousProgramming;
